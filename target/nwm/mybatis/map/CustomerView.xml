<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CustomerView">
	
	
	<select id="getListDeviceTypeMeter" resultType="Map">
		SELECT
			d.id,
			d.devicename,
			d.devicename AS export_devicename,
			d.datatablename,
			d.id_site
		FROM
			device d
			LEFT JOIN device_type dt ON d.id_device_type = dt.id 
		WHERE
			dt.id = 3 
			AND d.id_site = #{id_site}
			AND d.`status` = 1 
			AND d.is_delete = 0
		GROUP BY d.id_device_type
	</select>
	
	
	<select id="getListDeviceTypeInverter" resultType="Map">
		SELECT
			d.id,
			d.devicename,
			d.devicename AS export_devicename,
			d.datatablename,
			d.id_site
		FROM
			device d
			LEFT JOIN device_type dt ON d.id_device_type = dt.id 
		WHERE
			dt.id = 1
			AND d.id_site = #{id_site}
			AND d.`status` = 1 
			AND d.is_delete = 0
		GROUP BY d.id_device_type
	</select>
	
	
	
	
	
	<select id="getDataPowerMeterFiveMinutes" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			ROUND(( SUM( t.nvmActivePower ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.download_time,
						SUM(m.nvmActivePower) AS nvmActivePower
					FROM
						(
						SELECT
							dv.time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%m-%d-%Y %H:%i') AS download_time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%m-%d-%Y %H:%i') AS time_format,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%m-%d-%Y %H:%i') AS time_full,
							IFNULL(dv.nvmActivePower, 0) AS nvmActivePower 
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 3
							AND DATE_FORMAT(CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d') = DATE_FORMAT( #{end_date}, '%Y-%m-%d')
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	
	<select id="getDataPowerMeterFiveMinutes3Day" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvmActivePower ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.categories_time,
						m.time_full,
						m.download_time,
						SUM(m.nvmActivePower) AS nvmActivePower
					FROM
						(
						SELECT
							dv.time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%m-%d-%Y %H:%i') AS download_time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%m-%d-%Y %H:%i') AS time_format,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%m-%d-%Y %H:%i') AS time_full,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%e. %b') AS categories_time,
							IFNULL(dv.nvmActivePower, 0) AS nvmActivePower 
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 3
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	
	<select id="getDataEnergyFifteenMinutes" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			ROUND(( SUM( t.nvmActivePower ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.download_time,
						SUM(m.nvmActivePower) AS nvmActivePower
					FROM
						(
						SELECT
							dv.time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%m-%d-%Y %H:%i') AS download_time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%m-%d-%Y %H:%i') AS time_format,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%m-%d-%Y %H:%i') AS time_full,
							FLOOR(UNIX_TIMESTAMP(DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d %H:%i' ) ) / (15 * 60)) AS time_key,
							IFNULL(dv.nvmActivePower, 0) AS nvmActivePower 
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 3
							AND DATE_FORMAT(CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d') = DATE_FORMAT( #{end_date}, '%Y-%m-%d')
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_key
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getDataEnergyFifteenMinutes3Day" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvmActivePower ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvmActivePower) AS nvmActivePower
					FROM
						(
						SELECT
							dv.time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%m-%d-%Y %H:%i') AS download_time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%m-%d-%Y %H:%i') AS time_format,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%e. %b') AS categories_time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%m-%d-%Y %H:%i') AS time_full,
							FLOOR(UNIX_TIMESTAMP(DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d %H:%i' ) ) / (15 * 60)) AS time_key,
							IFNULL(dv.nvmActivePower, 0) AS nvmActivePower 
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 3
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
							
							
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_key
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getDataEnergyHour" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			ROUND(( SUM( t.nvmActivePower ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						SUM(m.nvmActivePower) AS nvmActivePower,
						m.download_time
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d %H:00' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d %H:00' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d %H:00' ) AS time_full,
							AVG( IFNULL(dv.nvmActivePower, 0) ) AS nvmActivePower
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 3
							AND DATE_FORMAT(CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d') = DATE_FORMAT( #{end_date}, '%Y-%m-%d')
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	<select id="getDataEnergyHourDay" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			ROUND(( SUM( t.nvmActivePower ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time,
			t.categories_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						SUM(m.nvmActivePower) AS nvmActivePower,
						m.download_time,
						m.categories_time
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%e. %b' ) AS categories_time,
							AVG( IFNULL(dv.nvmActivePower, 0) ) AS nvmActivePower
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 3
							AND DATE_FORMAT(CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d') = DATE_FORMAT( #{end_date}, '%Y-%m-%d')
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getDataEnergyInverterHourDay" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			ROUND(( SUM( t.nvmActivePower ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time,
			t.categories_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						SUM(m.nvmActivePower) AS nvmActivePower,
						m.download_time,
						m.categories_time
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%e. %b' ) AS categories_time,
							AVG( IFNULL(dv.nvmActivePower, 0) ) AS nvmActivePower
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 1
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getDataEnergyHour3Day" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvmActivePower ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvmActivePower) AS nvmActivePower
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y %H:00' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y %H:00' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y %H:00' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%e. %b' ) AS categories_time,
							AVG( IFNULL(dv.nvmActivePower, 0) ) AS nvmActivePower
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 3
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getDataEnergyDay3Day" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvmActivePower ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvmActivePower) AS nvmActivePower
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%d. %b' ) AS categories_time,
							AVG( IFNULL(dv.nvmActivePower, 0) ) AS nvmActivePower
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 3
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getDataEnergyInverterDay3Day" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvmActivePower ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvmActivePower) AS nvmActivePower
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%d. %b' ) AS categories_time,
							AVG( IFNULL(dv.nvmActivePower, 0) ) AS nvmActivePower
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 1
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getDataPowerMeterThisMonth" resultType="Map" >
		SELECT
			s.id,
			DATE_FORMAT( sdr.time, '%m/%d/%Y' ) AS download_time,
			DATE_FORMAT( sdr.time, '%m/%d/%Y' ) AS time_format,
			DATE_FORMAT( sdr.time, '%m/%d/%Y' ) AS time_full,
			DATE_FORMAT( sdr.time, '%m/%d' ) AS categories_time,
			IF( (SUM(IF(d.id_device_type = 3, sdr.ActualGeneration, 0))) > 0, (SUM(IF(d.id_device_type = 3, sdr.ActualGeneration, 0))), (SUM(IF(d.id_device_type = 1, sdr.ActualGeneration, 0))) ) AS chart_energy_kwh,
			IFNULL(SUM(IF(d.id_device_type = 4, sdr.POAAVG, NULL)), 0.001) AS nvm_irradiance,
			CASE
				WHEN mt.totalMeter > 0 THEN "meter"
				ELSE "inverter"
			END AS deviceType,
			IFNULL(SUM(IF(d.id_device_type = 3, sdr.ActualGeneration, 0)), 0.001) AS meterEnergy,
			IFNULL(SUM(IF(d.id_device_type = 1, sdr.ActualGeneration, 0)), 0.001) AS inverterEnergy
		FROM
			site_data_report sdr 
			LEFT JOIN device d ON d.id = sdr.id_device
			LEFT JOIN site s ON s.id = d.id_site
			LEFT JOIN time_zone t ON t.id = s.id_time_zone
			
			LEFT JOIN (
				SELECT de.id_site, COUNT(de.id) AS totalMeter 
				FROM site_data_report sd
				LEFT JOIN device de ON de.id = sd.id_device
				WHERE de.`status` = 1 
				AND de.is_delete = 0
				AND de.id_device_type = 3
				AND SHA1( de.id_site ) = #{id_site}
			)mt ON mt.id_site = s.id
			
		WHERE
			s.`status` = 1
			AND d.`status` = 1
			AND d.id_site = #{id_site}
			AND s.is_delete = 0
			AND d.is_delete = 0
			AND DATE_FORMAT( sdr.time , '%Y-%m') = DATE_FORMAT( #{end_date}, '%Y-%m')
			GROUP BY sdr.time
	</select>
	
	
	<select id="getDataPowerMeterYear" resultType="Map" >
		SELECT
			s.id,
			DATE_FORMAT( sdr.time, '%m/%d/%Y' ) AS download_time,
			DATE_FORMAT( sdr.time, '%m/%d/%Y' ) AS time_format,
			DATE_FORMAT( sdr.time, '%m/%d/%Y' ) AS time_full,
			DATE_FORMAT( sdr.time, '%b. %Y' ) AS categories_time,
			IF( (SUM(IF(d.id_device_type = 3, sdr.ActualGeneration, 0))) > 0, (ROUND(SUM(IF(d.id_device_type = 3, sdr.ActualGeneration, 0)), 1)), ROUND(SUM(IF(d.id_device_type = 1, sdr.ActualGeneration, 0)), 1) ) AS chart_energy_kwh,
			IFNULL(  ROUND(AVG(IF(d.id_device_type = 4, sdr.POAAVG, NULL)), 1), 0.001  ) AS nvm_irradiance,
			
			
			CASE
				WHEN mt.totalMeter > 0 THEN "meter"
				ELSE "inverter"
			END AS deviceType,
			IFNULL(SUM(IF(d.id_device_type = 3, sdr.ActualGeneration, 0)), 0.001) AS meterEnergy,
			IFNULL(SUM(IF(d.id_device_type = 1, sdr.ActualGeneration, 0)), 0.001) AS inverterEnergy
		FROM
			site_data_report sdr 
			LEFT JOIN device d ON d.id = sdr.id_device
			LEFT JOIN site s ON s.id = d.id_site
			LEFT JOIN time_zone t ON t.id = s.id_time_zone
			
			LEFT JOIN (
				SELECT de.id_site, COUNT(de.id) AS totalMeter 
				FROM site_data_report sd
				LEFT JOIN device de ON de.id = sd.id_device
				WHERE de.`status` = 1 
				AND de.is_delete = 0
				AND de.id_device_type = 4
				AND SHA1( de.id_site ) = #{id_site}
			)mt ON mt.id_site = s.id
			
		WHERE
			s.`status` = 1
			AND d.`status` = 1
			AND d.id_site = #{id_site}
			AND s.is_delete = 0
			AND d.is_delete = 0
			AND ( sdr.time BETWEEN #{start_date} AND #{end_date})
			GROUP BY DATE_FORMAT( sdr.time, '%m/%d/%Y' )
		
	</select>
	
	
	<select id="getDataPowerMeter12Month" resultType="Map" >
		SELECT
			s.id,
			DATE_FORMAT( sdr.time, '%m/%Y' ) AS download_time,
			DATE_FORMAT( sdr.time, '%m/%Y' ) AS time_format,
			DATE_FORMAT( sdr.time, '%m/%Y' ) AS time_full,
			DATE_FORMAT( sdr.time, '%m/%Y' ) AS categories_time,
			IF( (SUM(IF(d.id_device_type = 3, sdr.ActualGeneration, 0))) > 0, (ROUND(SUM(IF(d.id_device_type = 3, sdr.ActualGeneration, 0)), 1)), ROUND(SUM(IF(d.id_device_type = 1, sdr.ActualGeneration, 0)), 1) ) AS chart_energy_kwh,
			IFNULL(  ROUND(AVG(IF(d.id_device_type = 4, sdr.POAAVG, NULL)), 1), 0.001  ) AS nvm_irradiance,
			
			
			CASE
				WHEN mt.totalMeter > 0 THEN "meter"
				ELSE "inverter"
			END AS deviceType,
			IFNULL(SUM(IF(d.id_device_type = 3, sdr.ActualGeneration, 0)), 0.001) AS meterEnergy,
			IFNULL(SUM(IF(d.id_device_type = 1, sdr.ActualGeneration, 0)), 0.001) AS inverterEnergy
		FROM
			site_data_report sdr 
			LEFT JOIN device d ON d.id = sdr.id_device
			LEFT JOIN site s ON s.id = d.id_site
			LEFT JOIN time_zone t ON t.id = s.id_time_zone
			
			LEFT JOIN (
				SELECT de.id_site, COUNT(de.id) AS totalMeter 
				FROM site_data_report sd
				LEFT JOIN device de ON de.id = sd.id_device
				WHERE de.`status` = 1 
				AND de.is_delete = 0
				AND de.id_device_type = 4
				AND SHA1( de.id_site ) = #{id_site}
			)mt ON mt.id_site = s.id
			
		WHERE
			s.`status` = 1
			AND d.`status` = 1
			AND d.id_site = #{id_site}
			AND s.is_delete = 0
			AND d.is_delete = 0
			AND ( sdr.time BETWEEN #{start_date} AND #{end_date})
			GROUP BY DATE_FORMAT( sdr.time, '%m/%Y' )
		
	</select>
	
	
	
	<select id="getDataPowerMeterLifetime" resultType="Map" >
		SELECT
			s.id,
			DATE_FORMAT( sdr.time, '%m/%Y' ) AS download_time,
			DATE_FORMAT( sdr.time, '%m/%Y' ) AS time_format,
			DATE_FORMAT( sdr.time, '%m/%Y' ) AS time_full,
			DATE_FORMAT( sdr.time, '%b. %Y' ) AS categories_time,
			IF( (SUM(IF(d.id_device_type = 3, sdr.ActualGeneration, 0))) > 0, (ROUND(SUM(IF(d.id_device_type = 3, sdr.ActualGeneration, 0)), 1)), ROUND(SUM(IF(d.id_device_type = 1, sdr.ActualGeneration, 0)), 1) ) AS chart_energy_kwh,
			IFNULL(  ROUND(AVG(IF(d.id_device_type = 4, sdr.POAAVG, NULL)), 1), 0.001  ) AS nvm_irradiance,
			
			
			CASE
				WHEN mt.totalMeter > 0 THEN "meter"
				ELSE "inverter"
			END AS deviceType,
			IFNULL(SUM(IF(d.id_device_type = 3, sdr.ActualGeneration, 0)), 0.001) AS meterEnergy,
			IFNULL(SUM(IF(d.id_device_type = 1, sdr.ActualGeneration, 0)), 0.001) AS inverterEnergy
		FROM
			site_data_report sdr 
			LEFT JOIN device d ON d.id = sdr.id_device
			LEFT JOIN site s ON s.id = d.id_site
			LEFT JOIN time_zone t ON t.id = s.id_time_zone
			
			LEFT JOIN (
				SELECT de.id_site, COUNT(de.id) AS totalMeter 
				FROM site_data_report sd
				LEFT JOIN device de ON de.id = sd.id_device
				WHERE de.`status` = 1 
				AND de.is_delete = 0
				AND de.id_device_type = 4
				AND SHA1( de.id_site ) = #{id_site}
			)mt ON mt.id_site = s.id
			
		WHERE
			s.`status` = 1
			AND d.`status` = 1
			AND d.id_site = #{id_site}
			AND s.is_delete = 0
			AND d.is_delete = 0
			AND ( sdr.time BETWEEN #{start_date} AND #{end_date})
			GROUP BY DATE_FORMAT( sdr.time, '%m/%Y' )
		<!-- SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvmActiveEnergy ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvmActiveEnergy) AS nvmActiveEnergy
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y' ) AS categories_time,
							ROUND(( MAX( dv.nvmActiveEnergy ) - MIN( dv.nvmActiveEnergy ) ), 1 ) AS nvmActiveEnergy
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 3
							AND dv.nvmActiveEnergy > 0
							
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format -->
	</select>
	
	
	<select id="getListDeviceTypeIrradiance" resultType="Map">
		SELECT
			d.id,
			d.devicename,
			d.datatablename,
			d.id_site
		FROM
			device d
			LEFT JOIN device_type dt ON d.id_device_type = dt.id 
		WHERE
			dt.id IN(4)
			AND d.id_site = #{id_site}
			AND d.`status` = 1 
			AND d.is_delete = 0
	</select>
	
	
	<select id="getDataIrradianceFifteenMinutes" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			ROUND(( SUM( t.nvm_irradiance ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.download_time,
						SUM(m.nvm_irradiance) AS nvm_irradiance
					FROM
						(
						SELECT
							dv.time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%m-%d-%Y %H:%i') AS download_time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%m-%d-%Y %H:%i') AS time_format,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%m-%d-%Y %H:%i') AS time_full,
							FLOOR(UNIX_TIMESTAMP(DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d %H:%i' ) ) / (15 * 60)) AS time_key,
							IFNULL(dv.nvm_irradiance, 0) AS nvm_irradiance 
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type IN(4)
							AND DATE_FORMAT(CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d') = DATE_FORMAT( #{end_date}, '%Y-%m-%d')
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_key
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	<select id="getDataIrradianceFifteenMinutes3Day" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvm_irradiance ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvm_irradiance) AS nvm_irradiance
					FROM
						(
						SELECT
							dv.time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%m-%d-%Y %H:%i') AS download_time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%m-%d-%Y %H:%i') AS time_format,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%m-%d-%Y %H:%i') AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%e. %b' ) AS categories_time,
							FLOOR(UNIX_TIMESTAMP(DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d %H:%i' ) ) / (15 * 60)) AS time_key,
							IFNULL(dv.nvm_irradiance, 0) AS nvm_irradiance 
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type IN(4)
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_key
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	<select id="getDataIrradianceFiveMinutes" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			ROUND(( SUM( t.nvm_irradiance ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.download_time,
						SUM(m.nvm_irradiance) AS nvm_irradiance
					FROM
						(
						SELECT
							dv.time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%m-%d-%Y %H:%i') AS download_time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%m-%d-%Y %H:%i') AS time_format,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%m-%d-%Y %H:%i') AS time_full,
							IFNULL(dv.nvm_irradiance, 0) AS nvm_irradiance 
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type IN(4)
							AND DATE_FORMAT(CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d') = DATE_FORMAT( #{end_date}, '%Y-%m-%d')
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getDataIrradianceFiveMinutes3Day" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvm_irradiance ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvm_irradiance) AS nvm_irradiance
					FROM
						(
						SELECT
							dv.time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%m-%d-%Y %H:%i') AS download_time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%m-%d-%Y %H:%i') AS time_format,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%m-%d-%Y %H:%i') AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%e. %b' ) AS categories_time,
							IFNULL(dv.nvm_irradiance, 0) AS nvm_irradiance 
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type IN(4)
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getDataIrradianceHour" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			ROUND(( SUM( t.nvm_irradiance ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.download_time,
						SUM(m.nvm_irradiance) AS nvm_irradiance
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d %H:00' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d %H:00' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d %H:00' ) AS time_full,
							AVG( IFNULL(dv.nvm_irradiance, 0) ) AS nvm_irradiance
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type IN(4)
							AND DATE_FORMAT(CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d') = DATE_FORMAT( #{end_date}, '%Y-%m-%d')
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	<select id="getDataIrradianceHourDay" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			ROUND(( SUM( t.nvm_irradiance ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.download_time,
						SUM(m.nvm_irradiance) AS nvm_irradiance
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS time_full,
							AVG( IFNULL(dv.nvm_irradiance, 0) ) AS nvm_irradiance
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type IN(4)
							AND DATE_FORMAT(CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d') = DATE_FORMAT( #{end_date}, '%Y-%m-%d')
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getDataIrradianceHour3Day" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvm_irradiance ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvm_irradiance) AS nvm_irradiance
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y %H:00' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y %H:00' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y %H:00' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%e. %b' ) AS categories_time,
							AVG( IFNULL(dv.nvm_irradiance, 0) ) AS nvm_irradiance
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type IN(4)
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	<select id="getDataIrradianceDay3Day" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvm_irradiance ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvm_irradiance) AS nvm_irradiance
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%d. %b' ) AS categories_time,
							AVG( IFNULL(dv.nvm_irradiance, 0) ) AS nvm_irradiance
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type IN(4)
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getDataIrradianceThisMonth" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvm_irradiance ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvm_irradiance) AS nvm_irradiance
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m/%d' ) AS categories_time,
							ROUND(AVG( dv.nvm_irradiance ), 1 ) AS nvm_irradiance
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type IN(4)
							AND DATE_FORMAT(CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m') = DATE_FORMAT( #{end_date}, '%Y-%m')
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getDataIrradianceYear" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvm_irradiance ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvm_irradiance) AS nvm_irradiance
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%b. %Y' ) AS categories_time,
							ROUND(AVG( dv.nvm_irradiance ), 1 ) AS nvm_irradiance
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type IN(4)
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	
	<select id="getDataIrradiance12Month" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvm_irradiance ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						IFNULL(SUM(m.nvm_irradiance), 0) AS nvm_irradiance
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m/%Y' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m/%Y' ) AS categories_time,
							ROUND(AVG( dv.nvm_irradiance ), 1 ) AS nvm_irradiance
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type IN(4)
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	
	<select id="getDataIrradianceLifetime" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvm_irradiance ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvm_irradiance) AS nvm_irradiance
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y' ) AS categories_time,
							ROUND( AVG( dv.nvm_irradiance ), 1 ) AS nvm_irradiance
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type IN(4)
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	
	
	<select id="getCustomerViewInfoMeter" resultType="Map" >
			SELECT
			s.id,
			s.kiosk_view,
			SHA1(s.id) AS hash_id,
			scm.id_employee,
			s.`name`,
			s.dc_capacity,
			s.ac_capacity,
			s.lat,
			s.lng,
			s.data_send_time,
			t.`offset`,
			IFNULL(today.energy_today, 0) AS energy_today,
			IFNULL(ptoday.peak_power_today, 0) AS peak_power_today,
			IF(lifetime.energy_lifetime, FORMAT(ROUND(lifetime.energy_lifetime * 0.0117, 0), 0) , 0) AS total_tree,
			IF(lifetime.energy_lifetime, FORMAT(ROUND((lifetime.energy_lifetime * 392), 0), 0) , 0) AS total_co2,
			IFNULL(lifetime.energy_lifetime, 0) AS energy_lifetime
			
			
		FROM
			site s
			LEFT JOIN site_employee_map scm ON scm.id_site = s.id
			LEFT JOIN time_zone t ON t.id = s.id_time_zone 
			LEFT JOIN country c ON c.id = s.id_country
			LEFT JOIN(
				SELECT
					d.id_site,
					ROUND(SUM(d.energy_today), 1) AS energy_today
				FROM
					device d
					LEFT JOIN site s ON s.id = d.id_site
					WHERE s.`status` = 1 AND d.`status` = 1 AND d.id_device_type = 3
				GROUP BY d.id_site
			)today ON today.id_site = s.id
			
			LEFT JOIN (
				SELECT
				d.id_site,
				ROUND(SUM( d.last_value ), 2) AS peak_power_today 
			FROM
				site s
				LEFT JOIN device d ON s.id = d.id_site 
			WHERE
				s.`status` = 1 
				AND d.`status` = 1 
				AND d.id_device_type = 3 
				AND s.id = #{id_site}
			) ptoday ON ptoday.id_site = s.id	
			
			LEFT JOIN(
				SELECT
					d.id_site,
					ROUND(SUM(d.energy_lifetime), 0) AS energy_lifetime
				FROM
					device d
					LEFT JOIN site s ON s.id = d.id_site
					WHERE s.`status` = 1 AND d.`status` = 1 AND d.id_device_type = 3
				GROUP BY d.id_site
			)lifetime ON lifetime.id_site = s.id

		WHERE
			s.id = #{id_site}
			AND s.`status` = 1 
			AND s.is_delete = 0
			GROUP BY s.id;
		
	</select>
	
	
	<select id="getCustomerViewInfoInverter" resultType="Map" >
			SELECT
			s.id,
			s.kiosk_view,
			SHA1(s.id) AS hash_id,
			scm.id_employee,
			s.`name`,
			s.dc_capacity,
			s.ac_capacity,
			s.lat,
			s.lng,
			s.data_send_time,
			t.`offset`,
			IFNULL(today.energy_today, 0) AS energy_today,
			IFNULL(ptoday.peak_power_today, 0) AS peak_power_today,
			IF(lifetime.energy_lifetime, FORMAT(ROUND(lifetime.energy_lifetime * 0.0117, 0), 0) , 0) AS total_tree,
			IF(lifetime.energy_lifetime, FORMAT(ROUND((lifetime.energy_lifetime * 392), 0), 0) , 0) AS total_co2,
			IFNULL(lifetime.energy_lifetime, 0) AS energy_lifetime
			
			
		FROM
			site s
			LEFT JOIN site_employee_map scm ON scm.id_site = s.id
			LEFT JOIN time_zone t ON t.id = s.id_time_zone 
			LEFT JOIN country c ON c.id = s.id_country
			LEFT JOIN(
				SELECT
					d.id_site,
					ROUND(SUM(d.energy_today), 1) AS energy_today
				FROM
					device d
					LEFT JOIN site s ON s.id = d.id_site
					WHERE s.`status` = 1 AND d.`status` = 1 AND d.id_device_type = 1
				GROUP BY d.id_site
			)today ON today.id_site = s.id
			
			LEFT JOIN (
				SELECT
				d.id_site,
				SUM( d.last_value ) AS peak_power_today 
			FROM
				site s
				LEFT JOIN device d ON s.id = d.id_site 
			WHERE
				s.`status` = 1 
				AND d.`status` = 1 
				AND d.id_device_type = 1
				AND s.id = #{id_site}
			) ptoday ON ptoday.id_site = s.id	
			
			LEFT JOIN(
				SELECT
					d.id_site,
					ROUND(SUM(d.energy_lifetime), 0) AS energy_lifetime
				FROM
					device d
					LEFT JOIN site s ON s.id = d.id_site
					WHERE s.`status` = 1 AND d.`status` = 1 AND d.id_device_type = 1
				GROUP BY d.id_site
			)lifetime ON lifetime.id_site = s.id

		WHERE
			s.id = #{id_site}
			AND s.`status` = 1 
			AND s.is_delete = 0
			GROUP BY s.id;
		
	</select>
	
	
	
	
	<!-- Get data from inverter -->
	<select id="getDataPowerMeterFiveMinutesInverter3Day" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvmActivePower ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvmActivePower) AS nvmActivePower
					FROM
						(
						SELECT
							dv.time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%m-%d-%Y %H:%i') AS download_time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%m-%d-%Y %H:%i') AS time_format,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%m-%d-%Y %H:%i') AS time_full,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%e. %b') AS categories_time,
							IFNULL(dv.nvmActivePower, 0) AS nvmActivePower 
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 1
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	<select id="getDataEnergyFifteenMinutesInverter" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			ROUND(( SUM( t.nvmActivePower ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.download_time,
						SUM(m.nvmActivePower) AS nvmActivePower
					FROM
						(
						SELECT
							dv.time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%m-%d-%Y %H:%i') AS download_time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%m-%d-%Y %H:%i') AS time_format,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%m-%d-%Y %H:%i') AS time_full,
							FLOOR(UNIX_TIMESTAMP(DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d %H:%i' ) ) / (15 * 60)) AS time_key,
							IFNULL(dv.nvmActivePower, 0) AS nvmActivePower 
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 1
							AND DATE_FORMAT(CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d') = DATE_FORMAT( #{end_date}, '%Y-%m-%d')
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_key
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	<select id="getDataEnergyFifteenMinutesInverter3Day" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvmActivePower ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvmActivePower) AS nvmActivePower
					FROM
						(
						SELECT
							dv.time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%m-%d-%Y %H:%i') AS download_time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%m-%d-%Y %H:%i') AS time_format,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 900)*900), '%m-%d-%Y %H:%i') AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%e. %b' ) AS categories_time,
							FLOOR(UNIX_TIMESTAMP(DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d %H:%i' ) ) / (15 * 60)) AS time_key,
							IFNULL(dv.nvmActivePower, 0) AS nvmActivePower 
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 1
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_key
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getDataPowerMeterFiveMinutesInverter" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			ROUND(( SUM( t.nvmActivePower ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.download_time,
						SUM(m.nvmActivePower) AS nvmActivePower
					FROM
						(
						SELECT
							dv.time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%m-%d-%Y %H:%i') AS download_time,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%m-%d-%Y %H:%i') AS time_format,
							FROM_UNIXTIME(((UNIX_TIMESTAMP(CONVERT_TZ( dv.time, '+00:00', t.`offset` )) DIV 300)*300), '%m-%d-%Y %H:%i') AS time_full,
							IFNULL(dv.nvmActivePower, 0) AS nvmActivePower 
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 1
							AND DATE_FORMAT(CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d') = DATE_FORMAT( #{end_date}, '%Y-%m-%d')
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	
	
	
	<select id="getDataEnergyHourInverter" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			ROUND(( SUM( t.nvmActivePower ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.download_time,
						SUM(m.nvmActivePower) AS nvmActivePower
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d %H:00' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d %H:00' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d %H:00' ) AS time_full,
							AVG( IFNULL(dv.nvmActivePower, 0) ) AS nvmActivePower
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 1
							AND DATE_FORMAT(CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d') = DATE_FORMAT( #{end_date}, '%Y-%m-%d')
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getDataEnergyHourInverter3Day" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvmActivePower ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvmActivePower) AS nvmActivePower
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y %H:00' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y %H:00' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y %H:00' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%e. %b' ) AS categories_time,
							AVG( IFNULL(dv.nvmActivePower, 0) ) AS nvmActivePower
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 1
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	
	<select id="getDataEnergyInverterThisMonth" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvmActiveEnergy ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvmActiveEnergy) AS nvmActiveEnergy
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m/%d' ) AS categories_time,
							ROUND(( MAX( dv.nvmActiveEnergy ) - MIN( dv.nvmActiveEnergy ) ), 1 ) AS nvmActiveEnergy
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 1
							AND dv.nvmActiveEnergy > 0
							AND DATE_FORMAT(CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m') = DATE_FORMAT( #{end_date}, '%Y-%m')
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getDataEnergyInverterYear" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvmActiveEnergy ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvmActiveEnergy) AS nvmActiveEnergy
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m-%d' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m-%d-%Y' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%b. %Y' ) AS categories_time,
							ROUND(( MAX( dv.nvmActiveEnergy ) - MIN( dv.nvmActiveEnergy ) ), 1 ) AS nvmActiveEnergy
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 1
							AND dv.nvmActiveEnergy > 0
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getDataEnergyInverter12Month" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvmActiveEnergy ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvmActiveEnergy) AS nvmActiveEnergy
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y-%m' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m/%Y' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%m/%Y' ) AS categories_time,
							ROUND(( MAX( dv.nvmActiveEnergy ) - MIN( dv.nvmActiveEnergy ) ), 1 ) AS nvmActiveEnergy
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 1
							AND dv.nvmActiveEnergy > 0
							AND (CONVERT_TZ( dv.time, '+00:00', t.`offset` ) BETWEEN #{start_date} AND #{end_date})
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getDataEnergyInverterLifetime" resultType="Map" >
		SELECT
			t.time,
			t.time_format,
			t.categories_time,
			ROUND(( SUM( t.nvmActiveEnergy ) ), 1 ) AS chart_energy_kwh,
			t.time_full,
			t.download_time
			
		FROM
			(
				<foreach collection="groupMeter" item="item" index="index" separator="union all">
				<![CDATA[
					SELECT
						m.time,
						m.time_format,
						m.time_full,
						m.categories_time,
						m.download_time,
						SUM(m.nvmActiveEnergy) AS nvmActiveEnergy
					FROM
						(
						SELECT
							dv.time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y' ) AS download_time,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y' ) AS time_format,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y' ) AS time_full,
							DATE_FORMAT( CONVERT_TZ( dv.time, '+00:00', t.`offset` ), '%Y' ) AS categories_time,
							ROUND(( MAX( dv.nvmActiveEnergy ) - MIN( dv.nvmActiveEnergy ) ), 1 ) AS nvmActiveEnergy
						FROM
							${item.datatablename} dv
							LEFT JOIN device d ON d.id = dv.id_device
							LEFT JOIN site s ON s.id = d.id_site 
							LEFT JOIN time_zone t ON t.id = s.id_time_zone
						WHERE
							s.id = #{item.id_site}
							AND d.id_device_type = 1
							AND dv.nvmActiveEnergy > 0
							
							AND s.`status` = 1 
							AND d.`status` = 1 
						GROUP BY
							d.id, time_format
						) m 
					GROUP BY
						m.time_format
					]]>
		      </foreach>
			) t 
		GROUP BY
			t.time_format
	</select>
	
	
	<select id="getList" resultType="Map">
		SELECT
			s.id,
			SHA1(s.id)  hash_id,
			s.id_country,
			s.id_time_zone,
			s.`name`,
			s.street,
			s.lat,
			s.lng,
			built_since,
			s.old_data,
			s.number,
			s.postal_code,
			s.city,
			s.state,
			commissioning,
			s.emergency_contact,
			s.ac_capacity,
			s.dc_capacity,
			s.status,
			s.is_delete,
			s.created_date,
			s.created_by,
			s.updated_date,
			s.updated_by,
			s.gallery,
			s.site_default,
			s.data_send_time,
			CONCAT_WS(', ',s.street, s.city, s.state, c.`name`, s.postal_code) AS address_full,
			scm.id_employee
		FROM
			site AS s
			LEFT JOIN country c ON c.id = s.id_country
			LEFT JOIN site_employee_map scm ON scm.id_site = s.id
		WHERE
			 s.is_delete = 0 AND s.status = 1 AND scm.id_employee= #{id_employee}
			<if test="id_sites != null and !id_sites.isEmpty()">
			AND s.id IN  (
				<foreach item="item" index="index" collection="id_sites" separator=" , ">
					#{item.id}
				</foreach>
			)
			</if>

			GROUP BY s.id
			ORDER BY s.`name` ASC
	</select>
	
	
	<select id="getAlertSummary" resultType="com.nwm.api.entities.AlertEntity" parameterType="com.nwm.api.entities.AlertEntity">
		SELECT (
			SELECT
				COUNT( e.id_error_level ) AS lowPriority 
			FROM
				alert a
				LEFT JOIN error e ON a.id_error = e.id
				LEFT JOIN device d ON d.id = a.id_device
				LEFT JOIN site s ON s.id = d.id_site
				LEFT JOIN site_employee_map scm ON s.id = scm.id_site
			WHERE
				e.id_error_level = 13
				AND a.`status` = 1 
				AND e.`status` = 1
				AND s.status = 1
				AND s.is_delete = 0
				AND scm.id_employee = #{id_customer}
			GROUP BY
				e.id_error_level
		) AS lowPriority,
		
		(
			SELECT
				COUNT( e.id_error_level ) AS highPriority 
			FROM
				alert a
				LEFT JOIN error e ON a.id_error = e.id 
				LEFT JOIN device d ON d.id = a.id_device
				LEFT JOIN site s ON s.id = d.id_site
				LEFT JOIN site_employee_map scm ON s.id = scm.id_site
			WHERE
				e.id_error_level = 11
				AND a.`status` = 1 
				AND e.`status` = 1 
				AND s.status = 1
				AND s.is_delete = 0
				AND scm.id_employee = #{id_customer}
			GROUP BY
				e.id_error_level
		) AS highPriority,
		
		
		(
			SELECT
				COUNT(*) AS totalError 
			FROM
				alert a
				LEFT JOIN error e ON a.id_error = e.id 
				LEFT JOIN device d ON d.id = a.id_device
				LEFT JOIN site s ON s.id = d.id_site
				LEFT JOIN site_employee_map scm ON s.id = scm.id_site
			WHERE
				a.`status` = 1 
				AND e.`status` = 1 
				AND s.status = 1
				AND s.is_delete = 0
				AND scm.id_employee = #{id_customer}
		) AS totalError
		
				
  	</select>
  	
  	
  	<select id="getListAlertCustomerView" resultType="Map" parameterType="String" >
		SELECT
			l.id,
			l.asset,
			el.name AS priority_name,
			l.capacity,
			l.`status`,
			l.alert_acknowledged,
			l.disable_notification,
			l.resolved,
			IF(l.`status` = 1, 'Open', 'Close') AS status_name,
			el.`name` AS `level`,
			e.message,
			e.error_code,
			d.devicename,
			s.`name` AS site_name,
			s.id AS id_site,
			d.id as id_device,
			i.icon AS icon_alert,
			el.id AS id_error_level,
			el.level,
			DATE_FORMAT( CONVERT_TZ( l.start_date, t.`offset`, #{offset_timezone} ), #{format_sql_long} ) AS start,
			DATE_FORMAT( CONVERT_TZ( l.start_date,'+00:00', t.`offset`) , '%m/%d/%Y %H:%i %p') AS start_date,
			DATE_FORMAT(CONVERT_TZ( l.end_date,'+00:00', t.`offset`), '%m/%d/%Y %H:%i %p') AS end_date,
			
			CONCAT_WS('', 
				IF( FLOOR((TIMESTAMPDIFF(MINUTE,CONVERT_TZ( l.start_date,'+00:00', t.`offset`),#{current_time}) / (60*24))) <![CDATA[<]]> 0 , 0, FLOOR((TIMESTAMPDIFF(MINUTE,CONVERT_TZ( l.start_date,'+00:00', t.`offset`), #{current_time}) / (60*24)))), 'd ',
				IF(MOD(FLOOR((TIMESTAMPDIFF(MINUTE,CONVERT_TZ( l.start_date,'+00:00', t.`offset`),#{current_time}) / 60)), 24) <![CDATA[<]]> 0, 0, MOD(FLOOR((TIMESTAMPDIFF(MINUTE,CONVERT_TZ( l.start_date,'+00:00', t.`offset`),#{current_time}) / 60)), 24)), 'h ',
				IF( MOD((TIMESTAMPDIFF(MINUTE,CONVERT_TZ( l.start_date,'+00:00', t.`offset`), #{current_time})), 60) <![CDATA[<]]> 0, 0, MOD((TIMESTAMPDIFF(MINUTE,CONVERT_TZ( l.start_date,'+00:00', t.`offset`), #{current_time})), 60)), 'm'
			) AS duration,
			IFNULL( FLOOR((TIMESTAMPDIFF(MINUTE,CONVERT_TZ( l.start_date,'+00:00', t.`offset`), #{current_time}))) , 0) AS open_period,
			
			CASE
				WHEN CONVERT_TZ( l.start_date, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL -1 DAY ) THEN TIMESTAMPDIFF( DAY, CONVERT_TZ( l.start_date, '+00:00', t.`offset` ), DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i') )
				WHEN CONVERT_TZ( l.start_date, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL -1 HOUR ) THEN TIMESTAMPDIFF( HOUR, CONVERT_TZ( l.start_date, '+00:00', t.`offset` ), DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i') ) 
				WHEN CONVERT_TZ( l.start_date, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL -1 MINUTE ) THEN TIMESTAMPDIFF( MINUTE, CONVERT_TZ( l.start_date, '+00:00', t.`offset` ), DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i') ) 
				ELSE 0
			END AS times_ago,

	
			CASE
				WHEN CONVERT_TZ( l.start_date, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL - 1 DAY ) THEN 'day'
				WHEN CONVERT_TZ( l.start_date, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL - 1 HOUR ) THEN 'hour'
				WHEN CONVERT_TZ( l.start_date, '+00:00', t.`offset` ) <![CDATA[<]]> DATE_ADD( DATE_FORMAT( CONVERT_TZ( NOW(), '+00:00', t.`offset` ) , '%Y-%m-%d %H:%i'), INTERVAL - 1 MINUTE ) THEN 'minute' ELSE 'now'
			END AS times_ago_unit
			
			
		FROM
			`alert` l
			LEFT JOIN error e ON e.id = l.id_error
			LEFT JOIN error_level el ON el.id = e.id_error_level
			LEFT JOIN icon i ON i.id = el.id_icon
			LEFT JOIN device d ON d.id = l.id_device
			LEFT JOIN site s ON s.id = d.id_site
			LEFT JOIN site_employee_map scm ON s.id = scm.id_site
			LEFT JOIN time_zone t ON t.id = s.id_time_zone
			WHERE e.`status` = 1 AND e.is_delete = 0
			AND l.is_delete = 0
			AND s.status = 1
			AND s.is_delete = 0
			AND scm.id_employee = #{id_customer}
			<if test="view_history == 'active'">
				AND l.status = 1
			</if>
			<if test="view_history != 'active'">
				AND l.status = 0
			</if>
			
			<if test="date_from != null and date_to != null">
				AND CONVERT_TZ( l.start_date, '+00:00', t.`offset` )  BETWEEN #{date_from}  AND #{date_to}
			</if>
			<if test="id_sites != null and !id_sites.isEmpty()">
				AND s.id IN  (
					<foreach item="item" index="index" collection="id_sites" separator=" , ">
						#{item.id}
					</foreach>
				)
			</if>
			
			<if test="id_levels != null and !id_levels.isEmpty()">
				AND el.id IN  (
					<foreach item="item" index="index" collection="id_levels" separator=" , ">
						#{item.id}
					</foreach>
				)
			</if>
			
			<if test="site_name != null">
				AND s.`name` LIKE CONCAT("%",#{site_name}, "%")
			</if>
			
			
			GROUP BY l.id 
			
			<choose>
				<when test="sort_column == 'id'">
			      ORDER BY l.`id` ${order_by}
			    </when>
			    
			    <when test="sort_column == 'site_name'">
			      ORDER BY s.`name` ${order_by}
			    </when>
			    
			    <when test="sort_column == 'priority_name'">
			      ORDER BY el.`level` ${order_by}
			    </when>
			    
			    <when test="sort_column == 'message'">
			      ORDER BY e.`message` ${order_by}
			    </when>
			    
			    <when test="sort_column == 'devicename'">
			      ORDER BY d.`devicename` ${order_by}
			    </when>
			    
			    <when test="sort_column == 'start_date'">
			      ORDER BY l.`start_date` ${order_by}
			    </when>
			    
			    <when test="sort_column == 'end_date'">
			      ORDER BY l.`end_date` ${order_by}
			    </when>
			    
			    <when test="sort_column == 'open_period'">
			      ORDER BY `open_period` ${order_by}
			    </when>
			    
			    
			    <otherwise>
			      ORDER BY id DESC
			    </otherwise>
			  </choose>
  
			LIMIT #{limit} OFFSET #{offset};
	</select>
	
	
	<select id="countAlertCustomerView"  resultType="int" parameterType="String">
    	SELECT
			COUNT(l.id) as totalRecord
			
		FROM
			`alert` l
			LEFT JOIN error e ON e.id = l.id_error
			LEFT JOIN error_level el ON el.id = e.id_error_level
			LEFT JOIN device d ON d.id = l.id_device
			LEFT JOIN site s ON s.id = d.id_site
			LEFT JOIN site_employee_map scm ON s.id = scm.id_site
			LEFT JOIN time_zone t ON t.id = s.id_time_zone
			WHERE  e.`status` = 1 AND e.is_delete = 0 AND scm.id_employee = #{id_customer} AND s.status = 1 AND s.is_delete = 0
			
			<if test="view_history == 'active'">
				AND l.status = 1
			</if>
			<if test="view_history != 'active'">
				AND l.status = 0
			</if>
			
			<if test="date_from != null and date_to != null">
				AND CONVERT_TZ( l.start_date, '+00:00', t.`offset` )  BETWEEN #{date_from}  AND #{date_to}
			</if>

			<if test="id_sites != null and !id_sites.isEmpty()">
				AND s.id IN  (
					<foreach item="item" index="index" collection="id_sites" separator=" , ">
						#{item.id}
					</foreach>
				)
			</if>
			
			<if test="id_levels != null and !id_levels.isEmpty()">
				AND el.id IN  (
					<foreach item="item" index="index" collection="id_levels" separator=" , ">
						#{item.id}
					</foreach>
				)
			</if>
			
			<if test="site_name != null">
				AND s.`name` LIKE CONCAT("%",#{site_name}, "%")
			</if>
  	</select>
  	
	

  	
  	<select id="countCustomerViewNotificationAlert" resultType="int" parameterType="com.nwm.api.entities.CustomerEntity">
	  	SELECT
			COUNT( DISTINCT a.id ) AS totalRecord 
		FROM
			site s
			LEFT JOIN site_employee_map scm ON s.id = scm.id_site
			LEFT JOIN device d ON d.id_site = s.id
			LEFT JOIN alert a ON a.id_device = d.id 
		WHERE
			
			s.`status` = 1 
			AND s.is_delete = 0 
			AND a.`status` = 1 
			AND a.is_delete = 0 
			AND d.`status` = 1 
			AND d.is_delete = 0
			AND scm.id_employee = #{id_customer}
			
			<if test="id_sites != null and !id_sites.isEmpty()">
			AND s.id IN  (
				<foreach item="item" index="index" collection="id_sites" separator=", ">
					#{item.id}
				</foreach>
			)
			</if>
			
  	</select>
  	
  	
	
</mapper>